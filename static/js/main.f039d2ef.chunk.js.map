{"version":3,"sources":["components/task.jsx","App.js","index.js"],"names":["Task","props","useState","completed","setCompleted","className","style","textDecorationLine","task","onClick","onDeleteTask","App","taskInput","useRef","tasks","setTasks","handleDeleteTask","taskname","newTasks","JSON","parse","localStorage","getItem","filter","setItem","stringify","useEffect","existingTasks","display","alignItems","flexDirection","type","ref","current","value","marginTop","rowGap","map","ReactDOM","render","document","getElementById"],"mappings":"2LAEe,SAASA,EAAKC,GAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKC,UAAU,OAAf,UACE,mBAAGC,MAAO,CAAEC,mBAAoBJ,EAAY,eAAiB,QAA7D,SACGF,EAAMO,OAET,gCACE,wBACEC,QAAS,WACPL,GAAcD,IAAa,IAF/B,oBAOA,wBAAQM,QAAS,kBAAMR,EAAMS,aAAaT,EAAMO,OAAhD,0B,MCsCOG,MApDf,SAAaV,GACX,IAAMW,EAAYC,mBAClB,EAA0BX,mBAAS,IAAnC,mBAAOY,EAAP,KAAcC,EAAd,KAcA,SAASC,EAAiBC,GACxB,IACMC,EADa,YAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAC3BC,QAAO,SAAAf,GAAI,OAAIA,IAASS,KACvDF,EAASG,GACTG,aAAaG,QAAQ,QAASL,KAAKM,UAAUP,IAG/C,OAnBAQ,qBAAU,WACR,IAAMC,EAAgBN,aAAaC,QAAQ,SAC3CP,EAASY,EAAgBR,KAAKC,MAAMO,GAAiB,MACpD,IAiBD,sBACErB,MAAO,CACLsB,QAAS,OACTC,WAAY,SACZC,cAAe,UAJnB,UAOE,4CACA,sBAAKxB,MAAO,CAAEsB,QAAS,OAAQE,cAAe,OAA9C,UACE,uBAAOC,KAAK,OAAOC,IAAKpB,IACxB,wBAAQH,QAzBd,WACE,IAAMS,EAAQ,sBAAOJ,GAAP,CAAcF,EAAUqB,QAAQC,QAC9CnB,EAASG,GACTG,aAAaG,QAAQ,QAASL,KAAKM,UAAUP,IAC7CN,EAAUqB,QAAQC,MAAQ,IAqBtB,uBAEF,qBACE5B,MAAO,CACL6B,UAAW,GACXP,QAAS,OACTE,cAAe,SACfM,OAAQ,IALZ,SAQGtB,EAAMuB,KAAI,SAAA7B,GAAI,OACb,cAACR,EAAD,CAAiBQ,KAAMA,EAAME,aAAcM,GAAhCR,YC7CrB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f039d2ef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Task(props) {\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <p style={{ textDecorationLine: completed ? \"line-through\" : \"none\" }}>\r\n        {props.task}\r\n      </p>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setCompleted(!completed && true);\r\n          }}\r\n        >\r\n          ✅\r\n        </button>\r\n        <button onClick={() => props.onDeleteTask(props.task)}>❌</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Task from \"./components/task\";\r\nimport \"./global.scss\";\r\n\r\nfunction App(props) {\r\n  const taskInput = useRef();\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const existingTasks = localStorage.getItem(\"tasks\");\r\n    setTasks(existingTasks ? JSON.parse(existingTasks) : []);\r\n  }, []);\r\n\r\n  function handleAddTask() {\r\n    const newTasks = [...tasks, taskInput.current.value];\r\n    setTasks(newTasks);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n    taskInput.current.value = \"\";\r\n  }\r\n\r\n  function handleDeleteTask(taskname) {\r\n    const existingTasks = [...JSON.parse(localStorage.getItem(\"tasks\"))];\r\n    const newTasks = existingTasks.filter(task => task !== taskname);\r\n    setTasks(newTasks);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <h1>To-do List</h1>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <input type=\"text\" ref={taskInput} />\r\n        <button onClick={handleAddTask}>➕</button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: 20,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          rowGap: 20,\r\n        }}\r\n      >\r\n        {tasks.map(task => (\r\n          <Task key={task} task={task} onDeleteTask={handleDeleteTask} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}